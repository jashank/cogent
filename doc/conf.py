# -*- mode: python; coding: utf-8 -*-
#
# Configuration file for Sphinx.
#    <https://www.sphinx-doc.org/en/master/config>


# -- Path setup --------------------------------------------------------


# -- Project information -----------------------------------------------

project   = u'Cogent'
copyright = u'2020, CSIRO\'s Data61'
author    = u'The Cogent Team'

version   = u'2.9'				# short X.Y version
release   = u'2.9.0.0'			# full version, including tags


# -- General configuration ---------------------------------------------

# Add any Sphinx extension module names here.
extensions = [
    'sphinx.ext.todo',
    'sphinx.ext.mathjax',
    'sphinx.ext.githubpages',
    'sphinx.ext.graphviz',
    'sphinx.ext.linkcode',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
source_suffix = ['.rst']

# The master toctree document.
master_doc = 'index'

# The (human) language for content autogenerated by Sphinx.
# Refer to documentation for a list of supported languages.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# Add the magic `Cogent' small-capitalisation.
rst_prolog = '''
.. role:: raw-html(raw)
   :format: html
.. role:: raw-latex(raw)
   :format: latex

.. |cogent| replace:: \
:raw-latex:`\\textsc{Cogent}`\\ \
:raw-html:`<span style="font-variant:small-caps">Cogent</span>`
'''

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None

highlight_language = 'haskell'


# -- Options for HTML output -------------------------------------------

# The theme to use for HTML and HTML Help pages.
html_theme = 'sphinx_rtd_theme'
html_theme_path = ['_themes']

# Theme options are theme-specific, and customize look-and-feel further.
html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets)
# here, relative to this directory. They are copied after the builtin
# static files, so a file named "default.css" will overwrite the builtin
# "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document
# names to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

html_logo = '_static/cogent-logo.png'

html_theme_options = {
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'both',
    'style_external_links': False,
    # Toc options
    'collapse_navigation': False,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'titles_only': False
}

html_context = {
    'display_github': True, # Integrate GitHub
    'github_user': 'NICTA', # Username
    'github_repo': 'cogent', # Repo name
    'github_version': 'master', # Version
    'conf_py_path': '/doc/', # Path in the checkout to the docs root
}


# -- Options for HTMLHelp output ---------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'cogent'


# -- Options for LaTeX output ------------------------------------------

latex_engine = 'lualatex'
latex_elements = {
    'papersize': 'a4paper',
    'pointsize': '12pt',
    'fontpkg':   '''
\\usepackage{iftex}
% Sans-serifs, in Libertinus; serifs, in Crimson; monospace, in Latin Modern.
% Order matters: both Latin Modern and Libertinus replace rm, sf, tt,
% and we only want tt and sf, respectively.
%
% Read The Docs uses an ancient TeX Live which ships without Libertinus,
% and uses pdfLaTeX to render its output; so fall back to lmss.
\\usepackage{lmodern}
\\ifTUTeX
  \\usepackage{libertinus}
\\else
  % \\sfdefault is lmss.
\\fi

\\usepackage{crimson}
\\renewcommand{\\ttdefault}{lmtt}

\\usepackage{sectsty}
\\allsectionsfont{\\normalfont\\sffamily\\bfseries}
''',
    'fncychap':  '',
}


# -- Options for manual page output ------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'cogent', u'Cogent Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Cogent', u'Cogent Documentation',
     author, 'Cogent', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------


# -- Options for todo extension ----------------------------------------

# If true, `todo` and `todoList` produce output.
todo_include_todos = True


# -- Options for linkcode extension ------------------------------------
# <https://www.sphinx-doc.org/en/master/usage/extensions/linkcode.html>

from typing import Dict, Optional, Any
def linkcode_resolve(domain: str, info: Dict[str, Any]) -> Optional[str]:

	return None
